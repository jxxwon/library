<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.care.library.search.SearchMapper">
	<resultMap type="com.care.library.search.BookDTO"
		id="bookDto"> <!-- id는 식별자일뿐 -->
		<result column="publication_year" property="publicationYear" />
		<result column="rest_vol" property="restVol" />
	</resultMap>

	<select id = "findMaxNum">
  		SELECT MAX(total_id) FROM totalBook
  	</select>
  	
	<!-- 검색 전 모든 책 보여주기 -->
	<select id="getTotal" resultMap="bookDto">
		SELECT A.* FROM (SELECT * FROM totalBook ORDER BY total_id ASC)A WHERE A.total_id BETWEEN #{begin} AND #{end}
	</select>


	<insert id="popularInsert"
		parameterType="com.care.library.search.BookDTO">
		INSERT INTO popularBook (ranking, publication_year, bookName, authors, publisher, bookImageURL, vol, isbn)
		VALUES(#{ranking}, #{publicationYear},#{bookName}, #{authors}, #{publisher},
		#{bookImageURL}, #{vol}, #{isbn})
	</insert>

	<insert id="recentInsert"
		parameterType="com.care.library.search.BookDTO">
		INSERT INTO recentBook (bookName, authors, publisher, bookImageURL, publication_year, vol, isbn)
		VALUES(#{bookName}, #{authors}, #{publisher}, #{bookImageURL}, #{publicationYear}, #{vol}, #{isbn})
	</insert>

	<insert id="insertTotal"
		parameterType="com.care.library.search.BookDTO">
		INSERT INTO totalBook (bookName, authors, publisher, bookImageURL, publication_year ,vol, isbn, rest_vol) VALUES(#{bookName},#{authors},
		#{publisher}, #{bookImageURL}, #{publicationYear}, #{vol}, #{isbn}, #{vol})
	</insert>

	<delete id="deleteData">
		<if test="whichTable == 'popularBook'">
			DELETE FROM popularBook
		</if>
		<if test="whichTable == 'recentBook'">
			DELETE FROM recentBook
		</if>
		<if test="whichTable == 'totalBook'">
			DELETE FROM totalBook
		</if>
	</delete>

	<select id="getBookImages">
		<if test="whichTable == 'popularBook'">
			<!-- SELECT bookImageURL FROM popularBook WHERE no <![CDATA[ <= ]]> 5 -->
			SELECT bookImageURL
			FROM popularBook
			ORDER BY CAST(ranking AS UNSIGNED) ASC
			LIMIT 5
		</if>
		<if test="whichTable == 'recentBook'">
			SELECT bookImageURL FROM recentBook
		</if>
	</select>

	<!-- 대여하기 -->
	<!-- 관리자 테이블에 들어가야겠지 -->

	<select id="checkTotalDB">
		SELECT COUNT(*) FROM totalBook
	</select>

	<select id="checkSearchCount">
		SELECT COUNT(A.id) FROM (SELECT total_id AS id FROM totalBook WHERE
		LOWER(bookName) LIKE LOWER(CONCAT('%',#{search},'%')))A
	</select>

	<select id="getTable" resultMap="bookDto">
		<if test="whichTable == 'popularBook'">
			<!-- SELECT bookImageURL FROM popularBook WHERE no <![CDATA[ <= ]]> 5 -->
			SELECT * FROM popularBook
		</if>
		<if test="whichTable == 'recentBook'">
			SELECT * FROM recentBook
		</if>
	</select>

	<!--통합검색 -->
	<select id="totalSearch" resultMap="bookDto">
  		SELECT BBB.* FROM(SELECT ROWNUM() as rn, AAA.* FROM(SELECT * FROM totalBook WHERE LOWER(bookName) LIKE LOWER(CONCAT('%',#{search},'%')) ORDER BY total_id ASC)AAA)BBB WHERE rn BETWEEN #{begin} AND #{end}
	</select>
	
	
	<resultMap type="com.care.library.search.BookLoanDTO" id="bookLoanDto"> <!-- id는 식별자일뿐 -->
		<result column="user_id" property="userId" />
		<result column="start_date" property="startDate" />
		<result column="end_date" property="endDate" />
		<result column="reserve_date" property="reserveDate" />
	</resultMap>
	
	<!-- 대출 신청(예약) -->
	<insert id="insertLoan" parameterType="com.care.library.search.BookLoanDTO">
		INSERT INTO bookLoan (user_id, bookName, isbn, status, reserve_date) 
		values(#{userId}, #{bookName}, #{isbn}, 'R', #{reserveDate})
	</insert>
	
	<!-- 알림을 위해 관리자 찾기 -->
	<select id = "findAdmin" resultType = "com.care.library.member.MemberDTO">
		SELECT * FROM member WHERE status = 'M'
	</select>
	
	<!-- isbn으로 대출한 책 권수 찾기 -->
	<select id="checkRestVol">
		SELECT rest_vol FROM totalBook WHERE isbn=#{isbn}
	</select>
	
  	<select id="getMyBookStatus" resultMap="bookLoanDto">
	    SELECT bookLoan.bookName, bookLoan.start_date, bookLoan.end_date, bookLoan.status ,bookLoan.isbn FROM bookLoan 
	    WHERE user_id = #{userId} AND (status='R' OR status='L' OR status='O' OR status='LE')
	</select>
	
	<select id="getMyLoanHistory" resultMap="bookLoanDto">
	    SELECT bookLoan.bookName, bookLoan.start_date, bookLoan.end_date, bookLoan.status FROM bookLoan 
	    WHERE user_id = #{userId} AND status='C'
	</select>
	
	<!-- 대출 연장하기 -->
	<update id="updateLoanStatus">
  		UPDATE bookLoan SET status = 'LE', end_date=#{newEndDate} WHERE user_id= #{id} AND isbn = #{isbn}
  	</update>
		
</mapper>







  